@import "tailwindcss";

/* Base styles */
:root {
  line-height: 1.5;
  font-weight: 400;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
}

/* Theme customization */
@theme {
  --color-navy: #011627;
  --color-gold: #FEE440;
  --color-navy-light: #19273C;
  --color-navy-dark: #000C18;
  --font-sans: 'Inter', ui-sans-serif, system-ui;
}

/* Define dark mode strategy */
@tailwindcss {
  darkMode: 'class';
}

/* Light mode base styles - these need to be explicitly set */
html {
  background-color: white !important;
  color: var(--color-navy) !important;
}

/* Dark mode base styles */
html.dark {
  color-scheme: dark;
  background-color: var(--color-navy) !important;
  color: white !important;
}

/* Custom colors using CSS variables */
@layer utilities {
  .bg-navy {
    background-color: var(--color-navy);
  }
  .bg-gold {
    background-color: var(--color-gold);
  }
  .bg-navy-light {
    background-color: var(--color-navy-light);
  }
  .bg-navy-dark {
    background-color: var(--color-navy-dark);
  }
  .text-navy {
    color: var(--color-navy);
  }
  .text-navy-light {
    color: var(--color-navy-light);
  }
  .text-gold {
    color: var(--color-gold);
  }
}

/* Ensure dark mode utilities have higher specificity */
html:not(.dark) .bg-white {
  background-color: white !important;
}

html:not(.dark) .text-navy {
  color: var(--color-navy) !important;
}

html:not(.dark) .text-navy-light {
  color: var(--color-navy-light) !important;
}

/* Dark mode utilities with higher specificity */
html.dark .dark\:bg-navy {
  background-color: var(--color-navy) !important;
}

html.dark .dark\:bg-navy-light {
  background-color: var(--color-navy-light) !important;
}

html.dark .dark\:text-white {
  color: white !important;
}

html.dark .dark\:text-gold {
  color: var(--color-gold) !important;
}

/* Smooth transitions */
.transition-colors, html, body, #app, * {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Interactive elements */
button, a, [role="button"] {
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

button:focus, a:focus, [role="button"]:focus {
  outline: 2px solid var(--color-gold);
  outline-offset: 2px;
}

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Hero animations */
.hero-animate {
  animation: fadeInUp 0.8s ease forwards;
  opacity: 0;
}

.hero-animate:nth-child(2) {
  animation-delay: 0.15s;
}

.hero-animate:nth-child(3) {
  animation-delay: 0.3s;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Success message animation */
.success-message {
  animation: fadeInScale 0.5s ease forwards;
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Ripple effect for buttons */
.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.3);
  top: 0;
  left: 0;
  pointer-events: none;
  border-radius: inherit;
  transform: scale(0);
  opacity: 0;
  transition: transform 0.5s, opacity 0.5s;
}

.ripple:active::after {
  transform: scale(2);
  opacity: 0;
  transition: 0s;
}